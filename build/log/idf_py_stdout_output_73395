[1/11] Performing build step for 'bootloader'
[1/1] cd /Users/josedomingoplaza/esp/projects_tf/person_detection/build/bootloader/esp-idf/esptool_py && /Users/josedomingoplaza/esp/idf-tools/python_env/idf5.3_py3.12_env/bin/python /Users/josedomingoplaza/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/josedomingoplaza/esp/projects_tf/person_detection/build/bootloader/bootloader.bin
Bootloader binary size 0x6f50 bytes. 0xb0 bytes (1%) free.
[2/11] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/detection_responder.cc.obj
[3/11] No install step for 'bootloader'
[4/11] Linking C static library esp-idf/espressif__led_strip/libespressif__led_strip.a
[5/11] Completed 'bootloader'
[6/11] Linking C static library esp-idf/main/libmain.a
[7/11] Generating ld/sections.ld
[8/11] Building C object CMakeFiles/person_detection.elf.dir/project_elf_src_esp32.c.obj
[9/11] Linking CXX executable person_detection.elf
[10/11] Generating binary image from built executable
esptool.py v4.8.dev3
Creating esp32 image...
Merged 3 ELF sections
Successfully created esp32 image.
Generated /Users/josedomingoplaza/esp/projects_tf/person_detection/build/person_detection.bin
[11/11] cd /Users/josedomingoplaza/esp/projects_tf/person_detection/build/esp-idf/esptool_py && /Users/josedomingoplaza/esp/idf-tools/python_env/idf5.3_py3.12_env/bin/python /Users/josedomingoplaza/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/josedomingoplaza/esp/projects_tf/person_detection/build/partition_table/partition-table.bin /Users/josedomingoplaza/esp/projects_tf/person_detection/build/person_detection.bin
person_detection.bin binary size 0xa3490 bytes. Smallest app partition is 0x180000 bytes. 0xdcb70 bytes (57%) free.
